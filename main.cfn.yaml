AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This template configures resources in the DevOps Account
Resources:
  # ----------
  # ROLES
  # ----------

  # Access Role for CodePipeLine
  CodePipeLineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'

  # Access Role for CodeBuild
  CodeBuildExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  # ----------
  # ECR Repository
  # ----------
  ContainerRepository: 
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: "fiber-api-repository"
      ImageTagMutability: MUTABLE
      ImageScanningConfiguration: 
        ScanOnPush: true

  # ----------
  # CODEPIPELINE - Fiber API
  # ----------
  # S3 Bucket for build artifacts
  FiberAPICodePipelineArtifactsS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: 'fiber-api-codepipeline-artifacts'

  # Create the BuildProject with required Build information
  FiberAPIBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: Fiber-API-Build
      Artifacts: 
        Type: CODEPIPELINE
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: True
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: ECR_REPOSITORY_URI
            Value: !Join [ ".", [ !Ref "AWS::AccountId", "dkr.ecr", !Ref "AWS::Region", !Join [ "/", [ "amazonaws.com", !Ref "ContainerRepository" ] ] ] ]
      ServiceRole: !Ref CodeBuildExecutionRole
      Source:
        Type: CODEPIPELINE
        # This file (buildspec.yml In Source code) contains commands to Create and Push a docker image to the ECR_REPOSITORY_URI
        BuildSpec: buildspec.yml

  # Create CodePipeline with 2 stages (Source, Build)
  FiberAPIPipeline: 
    Type: AWS::CodePipeline::Pipeline 
    Properties:
      Name: Fiber-API-CodePipeline
      ArtifactStore:
        Type: S3
        Location: !Ref FiberAPICodePipelineArtifactsS3Bucket
      RestartExecutionOnUpdate: False
      RoleArn:
        Fn::GetAtt: [ CodePipeLineExecutionRole, Arn ]
      Stages: 

        # Download source code from Github Repo to source-output-artifacts path in S3 Bucket
        - 
          Name: Source
          Actions:
            - Name: Fiber-API-Source
              ActionTypeId:
                Version: '1'
                Owner: AWS
                Category: Source
                Provider: CodeStarSourceConnection
              Configuration:
                ConnectionArn: "arn:aws:codestar-connections:eu-west-1:387310632530:connection/b8d7c6ba-aead-4ab3-9f67-bc453cf0e924"
                FullRepositoryId: "Travel-Project-2022/Fiber-API"
                BranchName: "master"
                OutputArtifactFormat: "CODE_ZIP"
              RunOrder: 1
              OutputArtifacts:
                - Name: source-output-artifacts

        # Build the project using the BuildProject and Output build artifacts to build-output-artifacts path in S3 Bucket
        - 
          Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: source-output-artifacts
              Configuration:
                  ProjectName: !Ref FiberAPIBuild
              RunOrder: 1
              OutputArtifacts:
                - Name: build-output-artifacts

  # ----------
  # CODEPIPELINE - Fiber API Infrastructure
  # ----------
  FiberAPIInfrastructureCodePipelineArtifactsS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: 'fiber-api-infrastructure-codepipeline-artifacts'

  # Create CodePipeline with 2 stages (Source, Build)
  FiberAPIInfrastructurePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: Fiber-API-Infrastructure-CodePipeline
      ArtifactStore:
        Type: S3
        Location: !Ref FiberAPIInfrastructureCodePipelineArtifactsS3Bucket
      RestartExecutionOnUpdate: False
      RoleArn:
        Fn::GetAtt: [ CodePipeLineExecutionRole, Arn ]
      Stages:
        - Name: Source
          Actions:
            - Name: Fiber-API-Cloudformation-Source
              ActionTypeId:
                Version: '1'
                Owner: AWS
                Category: Source
                Provider: CodeStarSourceConnection
              Configuration:
                ConnectionArn: "arn:aws:codestar-connections:eu-west-1:387310632530:connection/b8d7c6ba-aead-4ab3-9f67-bc453cf0e924"
                FullRepositoryId: "Travel-Project-2022/Fiber-API-CloudFormation"
                BranchName: "master"
                OutputArtifactFormat: "CODE_ZIP"
              RunOrder: 1
              OutputArtifacts:
                - Name: source-output-artifacts
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: source-output-artifacts
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: 'arn:aws:iam::387310632530:role/CloudFormation-Role'
                StackName: Fiber-API-Infrastructure
                TemplatePath: 'source-output-artifacts::main.cfn.yaml'
              RunOrder: 1
              OutputArtifacts: []