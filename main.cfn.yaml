AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This template configures resources in the DevOps Account
Resources:
  # ----------
  # ROLES
  # ----------
  # Access Role for CodeBuild
  CodeBuildExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  # ----------
  # ECR Repository
  # ----------
  ContainerRepository:
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: "fiber-api-repository"
      ImageTagMutability: MUTABLE
      ImageScanningConfiguration: 
        ScanOnPush: true
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowPull
            Effect: Allow
            Principal:
              AWS:
                - arn:aws:iam::427785492434:root # Test Account
                - arn:aws:iam::134607788173:root # Production Account
            Action:
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - ecr:BatchCheckLayerAvailability

  # ----------
  # CODEPIPELINE - Fiber API
  # ----------
  # S3 Bucket for build artifacts
  FiberAPICodePipelineArtifactsS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: fiber-api-codepipeline-artifacts

  # Create the BuildProject with required Build information
  FiberAPIBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: Fiber-API-Build
      Artifacts: 
        Type: CODEPIPELINE
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: True
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: ECR_REPOSITORY_URI
            Value: !Join [ ".", [ !Ref "AWS::AccountId", "dkr.ecr", !Ref "AWS::Region", !Join [ "/", [ "amazonaws.com", !Ref "ContainerRepository" ] ] ] ]
      ServiceRole: !Ref CodeBuildExecutionRole
      Source:
        Type: CODEPIPELINE
        # This file (buildspec.yml In Source code) contains commands to Create and Push a docker image to the ECR_REPOSITORY_URI
        BuildSpec: buildspec.yml

  # Create CodePipeline with 2 stages (Source, Build)
  FiberAPIPipeline: 
    Type: AWS::CodePipeline::Pipeline 
    Properties:
      Name: Fiber-API-CodePipeline
      ArtifactStore:
        Type: S3
        Location: !Ref FiberAPICodePipelineArtifactsS3Bucket
      RestartExecutionOnUpdate: False
      RoleArn: !ImportValue CodePipelineExecutionRoleArn
      Stages:
        # Download source code from Github Repo to source-output-artifacts path in S3 Bucket
        - 
          Name: Source
          Actions:
            - Name: Fiber-API-Source
              ActionTypeId:
                Version: '1'
                Owner: AWS
                Category: Source
                Provider: CodeStarSourceConnection
              Configuration:
                ConnectionArn: "arn:aws:codestar-connections:us-east-1:387310632530:connection/c6ff57ad-dab9-4ade-ac7d-ed4a5373c962"
                FullRepositoryId: "Travel-Project-2022/Fiber-API"
                BranchName: "master"
                OutputArtifactFormat: "CODE_ZIP"
              RunOrder: 1
              OutputArtifacts:
                - Name: source-output-artifacts

        # Build the project using the BuildProject and Output build artifacts to build-output-artifacts path in S3 Bucket
        - 
          Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: source-output-artifacts
              Configuration:
                  ProjectName: !Ref FiberAPIBuild
              RunOrder: 1
              OutputArtifacts:
                - Name: build-output-artifacts

  # ----------
  # CODEPIPELINE - Fiber API Infrastructure
  # ----------
  FiberAPIInfrastructureKMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Used by Assumed Roles in Test/Prod accounts to Encrypt/Decrypt code
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Id: FiberAPIInfrastructure-Key
        Statement:
          - Sid: Allows admin of the key
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - "kms:Create*"
              - "kms:Describe*"
              - "kms:Enable*"
              - "kms:List*"
              - "kms:Put*"
              - "kms:Update*"
              - "kms:Revoke*"
              - "kms:Disable*"
              - "kms:Get*"
              - "kms:Delete*"
              - "kms:ScheduleKeyDeletion"
              - "kms:CancelKeyDeletion"
            Resource: "*"
          - Sid: Allow use of the key for CryptoGraphy Lambda
            Effect: Allow
            Principal:
              AWS:
                - arn:aws:iam::427785492434:root
                - !ImportValue CodePipelineExecutionRoleArn
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"

  KMSAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/FiberAPIInfrastructure-xaccounts
      TargetKeyId: !Ref FiberAPIInfrastructureKMSKey

  FiberAPIInfrastructureCodePipelineArtifactsS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: 'fiber-api-infrastructure-codepipeline-artifacts'

  FiberAPIInfrastructureCodePipelineArtifactsS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FiberAPIInfrastructureCodePipelineArtifactsS3Bucket
      PolicyDocument:
        Statement:
          - Action:
              - s3:*
            Effect: Allow
            Resource:
              - !Sub arn:aws:s3:::${FiberAPIInfrastructureCodePipelineArtifactsS3Bucket}
              - !Sub arn:aws:s3:::${FiberAPIInfrastructureCodePipelineArtifactsS3Bucket}/*
            Principal:
              AWS:
                - arn:aws:iam::427785492434:root
#                - arn:aws:iam::427785492434:role/DevOps-Account-CodePipeline-Role
#                - arn:aws:iam::427785492434:role/CloudFormation-Role
                - !ImportValue CodePipelineExecutionRoleArn

  # Create CodePipeline with 2 stages (Source, Build)
  FiberAPIInfrastructurePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: Fiber-API-Infrastructure-CodePipeline
      ArtifactStore:
        Type: S3
        Location: !Ref FiberAPIInfrastructureCodePipelineArtifactsS3Bucket
        EncryptionKey:
          Id: !GetAtt FiberAPIInfrastructureKMSKey.Arn
          Type: KMS
      RestartExecutionOnUpdate: False
      RoleArn: !ImportValue CodePipelineExecutionRoleArn
      Stages:
        - Name: Source
          Actions:
            - Name: Fiber-API-Cloudformation-Source
              ActionTypeId:
                Version: '1'
                Owner: AWS
                Category: Source
                Provider: CodeStarSourceConnection
              Configuration:
                ConnectionArn: "arn:aws:codestar-connections:us-east-1:387310632530:connection/c6ff57ad-dab9-4ade-ac7d-ed4a5373c962"
                FullRepositoryId: "Travel-Project-2022/Fiber-API-CloudFormation"
                BranchName: "master"
                OutputArtifactFormat: "CODE_ZIP"
              RunOrder: 1
              OutputArtifacts:
                - Name: source-output-artifacts
        - Name: Deploy
          Actions:
            - Name: Deploy
              RoleArn: arn:aws:iam::427785492434:role/DevOps-Account-CodePipeline-Role
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: source-output-artifacts
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: arn:aws:iam::427785492434:role/CloudFormation-Deployment-Role
                StackName: Fiber-API-Infrastructure
                TemplatePath: 'source-output-artifacts::main.cfn.yaml'
              RunOrder: 1
              OutputArtifacts: []